@model CapstoneV4.Models.ViewModels.BookListVM

@{
    ViewData["Title"] = " | Book Catalog";
    CapstoneV4.Models.Grid.RouteDictionary current = Model.CurrentRoute;
    CapstoneV4.Models.Grid.RouteDictionary routes = Model.CurrentRoute.Clone();

}

<h1>Programs</h1>

<div style="display:flex; flex-direction:column; ">
    <div class="">
        <form asp-controller="Book" asp-action="Filter" method="post" class="form-inline">

            <label>Name</label>
            <select name="filter" class="form-control m-2 " asp-items="@(new SelectList(Model.Authors,"AuthorID","FullName", current.AuthorFilter))">
                <option value="@CapstoneV4.Models.DTOs.BookGridDTO.DefaultFilter">All</option>
            </select>

            <label>Topic</label>
            <select name="filter" class="form-control m-2" asp-items="@(new SelectList(Model.Genres,"GenreId","Name", current.GenreFilter))">
                <option value="@CapstoneV4.Models.DTOs.BookGridDTO.DefaultFilter">All</option>


            </select>

            <label>Schedule</label>
            <select name="filter" class="form-control m-2" asp-items="@(new SelectList(Model.Prices,"Key","Value", current.PriceFilter))">
                <option value="@CapstoneV4.Models.DTOs.BookGridDTO.DefaultFilter">All</option>


            </select>


            <button type="submit" class="btn btn-primary m-2">Filter</button>
            <button type="submit" name="clear" class="btn btn-outline-primary m-2">Clear Filters</button>


        </form>


        <div class="">
            @* page-size form *@
            <form asp-controller="Book" asp-action="PageSize" method="post" class="form-inline">
                <label>Page Size:</label>
                <select name="pagesize" class="form-control m-2" asp-items="@(new SelectList(Model.PageSizes,current.PageSize))">
                </select>
                <button type="submit" class="btn btn-primary m-2"></button>
            </form>
        </div>
    </div>



</div>

@* add to cart*@
<form asp-controller="Cart" asp-action="Add" method="post">
    <table class="table table-bordered table-striped table-sm">
        <thead class="thead-dark">
            <tr>
                <th>
                    @{ routes.SetSortDirection(nameof(CapstoneV4.Models.DomainModels.Book.Title), current);}
                    <a asp-controller="Book" asp-action="List" asp-all-route-data="@routes" class="text-white">Title</a>

                </th>
                <th>Author(s)</th>
                <th>
                    @{ routes.SetSortDirection(nameof(CapstoneV4.Models.DomainModels.Genre.Name), current);}
                    <a asp-controller="Book" asp-action="List" asp-all-route-data="@routes" class="text-white">Genre</a>

                </th>

                <th>
                    @{ routes.SetSortDirection(nameof(CapstoneV4.Models.DomainModels.Book.Price), current);}
                    <a asp-controller="Book" asp-action="List" asp-all-route-data="@routes" class="text-white">Tuition</a>

                </th>

                <th></th>
            </tr>
            


        </thead>
        <tbody>
            @foreach(CapstoneV4.Models.DomainModels.Book book in Model.Books)
            {
                <tr>
                    <td>
                        <a asp-controller="Book" asp-action="Details" asp-route-id="@book.BookId">@book.Title</a>
                    </td>
                    <td>
                        @foreach(var ba in book.BookAuthor) {
                            <p>
                                <a asp-controller="Author" asp-action="Details" asp-route-id="ba.AuthorId">@ba.Author.FullName</a>
                            </p>
                        }
                    </td>

                        
                    <td>@book.Genre.Name</td>
                    <td>@book.Price.ToString("c")</td>
                    <td>
                    <button type="submit" name="id" value="@book.BookId" class="btn btn-success">Enroll</button>
                </tr>
            }
        </tbody>

    </table>
</form>

@*paging*@
@{
    routes = Model.CurrentRoute.Clone();

    for(int i = 1; i <= Model.TotalPages; i++ )
    {
        routes.PageNumber = i;
        <a asp-asp-controller="Book" asp-action="List" asp-all-asp-all-route-data="@routes" class="btn btn-outline-success @CapstoneV4.Models.ViewModels.NavigationVM.ActiveLink(i, current.PageNumber)">@i</a>
    }
}